{"version":3,"file":"component---src-pages-index-js-e1f65d1bec1034c840af.js","mappings":"iLAoGA,UA/FkB,SAAC,GAAwB,IAAD,IAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzB,EAAkCC,EAAAA,SAAe,MAA1CC,EAAP,KAAkBC,EAAlB,KAOMC,GAAY,UAAAL,EAAKM,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAS,UAAGT,EAAKM,KAAKC,oBAAb,aAAG,EAAwBF,UACpCK,EAAOV,EAAKW,KAAKD,KACjBE,EAAkBZ,EAAKa,YAAYC,MAEnCC,EAAS,SAACC,EAAMC,GACpB,OACE,uBAAKC,UAAU,+CACb,gBAAC,EAAAC,KAAD,CAAMC,GAAE,IAAMJ,EACZE,UAAS,SAAUf,IAAca,GAAQ,eACzCK,QAAS,kBAAMC,EAAaN,KAC3BC,KAKHM,EAAQ,SAACA,GACb,OAAQ,0BACLA,MAAAA,OADK,EACLA,EAAOC,KAAI,SAAAC,GACV,OACE,sBAAIC,IAAKD,EAAEE,KAAKC,GAAIV,UAAU,qCAC5B,wBAAMA,UAAU,2BAA2BO,EAAEE,KAAKE,YAAYC,MAC9D,gBAAC,EAAAX,KAAD,CACED,UAAU,OACVE,GAAIK,EAAEE,KAAKI,OAAOC,KAClBC,SAAS,OACRR,EAAEE,KAAKE,YAAYrB,aAS1Bc,EAAe,SAAAY,GACnB9B,EAAa8B,IAGf,OACE,gBAAC,IAAD,CAAQjC,SAAUA,EAAUO,MAAOH,EAAWa,UAAU,cACtD,8BACE,uBAAKA,UAAU,iCAAf,6BACA,qBAAGiB,KAAM1B,EAAWS,UAAU,6CAA9B,sBAEF,gBAAC,IAAD,CAAKV,MAAM,KAGVO,EApDuB,iBAoDK,kBAC5BQ,EAAMX,GAING,EAxDsB,gBAwDK,iBAE5B,0BACGL,EAAKc,KAAI,SAAAY,GACR,OACE,sBAAIV,IAAKU,EAAInB,MACX,uBACEC,UAAS,6CACTU,GAAIQ,EAAInB,MAER,gBAAC,EAAAE,KAAD,CACEC,GAAE,IAAMgB,EAAInB,KACZgB,SAAS,MACTf,UAAS,SAAUf,IAAciC,EAAInB,MAAQ,eAE7CI,QAAS,kBAAMC,EAAac,EAAInB,QAE/BmB,EAAInB,KACL,iCAASmB,EAAIC,UAAb,OAKJ,sBAAInB,UAAU,aACXK,EAAMa,EAAItB","sources":["webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import { graphql, Link } from \"gatsby\"\nimport * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const [activeTag, setActiveTag] = React.useState(null)\n\n  // Constant(s).\n  const LINK_RECENTLY_ADDED = \"recently-added\";\n  const LINK_BY_CATEGORIES = \"by-categories\";\n\n  // Variables\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const githubUrl = data.site.siteMetadata?.siteTitle;\n  const tags = data.page.tags\n  const dataRecentPosts = data.recentPosts.edges;\n\n  const header = (link, name) => {\n    return (\n      <div className=\"text-2xl font-semibold font-serif mt-8 mb-4\">\n        <Link to={`#${link}`}\n          className={`pt-1 ${activeTag === link && \"targetClass\"}`}\n          onClick={() => toggleActive(link)}>\n          {name}\n        </Link>\n      </div>)\n  }\n\n  const posts = (posts) => {\n    return (<ul>\n      {posts?.map(p => {\n        return ((\n          <li key={p.node.id} className=\"flex flex-row link-item leading-7\">\n            <span className=\"flex-none text-gray-400\">{p.node.frontmatter.date}</span>\n            <Link\n              className=\"ml-5\"\n              to={p.node.fields.slug}\n              itemProp=\"url\">\n              {p.node.frontmatter.title}\n            </Link>\n\n          </li>\n        ))\n      })}\n    </ul>)\n  };\n\n  const toggleActive = tagName => {\n    setActiveTag(tagName)\n  }\n\n  return (\n    <Layout location={location} title={siteTitle} className=\"font-serif\">\n      <header>\n        <div className=\"text-4xl font-extrabold mt-10\">everyday: Development Log</div>\n        <a href={githubUrl} className=\"text-sm text-gray-500 cursor-pointer mt-1\">Github Repository</a>\n      </header>\n      <Seo title=\"\" />\n\n      {/* Recently added list */}\n      {header(LINK_RECENTLY_ADDED, \"Recently Added\")}\n      {posts(dataRecentPosts)}\n\n\n      {/* By Categories list */}\n      {header(LINK_BY_CATEGORIES, \"By Categories\")}\n      {/* Tags */}\n      <ul>\n        {tags.map(tag => {\n          return (\n            <li key={tag.name}>\n              <div\n                className={`capitalize text-xl font-semibold mt-8 mb-4`}\n                id={tag.name}\n              >\n                <Link\n                  to={`#${tag.name}`}\n                  itemProp=\"url\"\n                  className={`pt-1 ${activeTag === tag.name && \"targetClass\"\n                    }`}\n                  onClick={() => toggleActive(tag.name)}\n                >\n                  {tag.name}\n                  <span> ({tag.postCount})</span>\n                </Link>\n              </div>\n\n              {/* Posts */}\n              <ul className=\"link-list\">\n                {posts(tag.edges)}\n              </ul>\n            </li>\n          )\n        })}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    recentPosts: allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}) {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"YYYY.MM.DD\")\n            title\n          }\n          fields {\n            slug\n          }\n          id\n        }\n      }\n    }\n    page: allMarkdownRemark {\n      tags: group(field: frontmatter___tags) {\n        name: fieldValue\n        postCount: totalCount\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date(formatString: \"YYYY.MM.DD\")\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","React","activeTag","setActiveTag","siteTitle","site","siteMetadata","title","githubUrl","tags","page","dataRecentPosts","recentPosts","edges","header","link","name","className","Link","to","onClick","toggleActive","posts","map","p","key","node","id","frontmatter","date","fields","slug","itemProp","tagName","href","tag","postCount"],"sourceRoot":""}